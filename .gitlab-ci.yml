# first, install Cypress, then run all tests (in parallel)
stages:
  - build
  - test

# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  CI_NODE_TOTAL: 2

# cache using branch name
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .npm
    - cache/Cypress
    - node_modules

# this job installs NPM dependencies and Cypress
install:
  image: cypress/browsers:chrome69
  stage: build

  script:
    - npm ci
    - $(npm bin)/print-env CI
    - npm run cy:verify
#    - npm install cypress-testrail-reporter --save-dev
#  tags:
#    - docker

# all jobs that actually run tests can use the same definition
.job_template: &job
  image: cypress/browsers:chrome69
  stage: test
  script:
    # print CI environment variables for reference
    - npm ci # solution for unstable gitlab cache (issue about this is still open) waiting for fix
    - $(npm bin)/print-env CI

    # run Cypress test in load balancing mode
    - npm run e2e:chrome:parallel
  retry: 2

  artifacts:
    when: on_success
    paths:
      #      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day
#  tags:
#    - docker

      # actual job definitions
# all steps are the same, they come from the template above
runner-1:
  <<: *job
runner-2:
  <<: *job
